/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.1 		*/
/*  Created On : 20-ago.-2020 10:27:43 a. m. 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Tables */

DROP TABLE IF EXISTS Agenda CASCADE
;

DROP TABLE IF EXISTS Categoria CASCADE
;

DROP TABLE IF EXISTS Cita CASCADE
;

DROP TABLE IF EXISTS Consultorio CASCADE
;

DROP TABLE IF EXISTS EPS CASCADE
;

DROP TABLE IF EXISTS Especialidad CASCADE
;

DROP TABLE IF EXISTS HistoriaClinica CASCADE
;

DROP TABLE IF EXISTS Medico CASCADE
;

DROP TABLE IF EXISTS Medico - Especialidad CASCADE
;

DROP TABLE IF EXISTS Paciente CASCADE
;

DROP TABLE IF EXISTS Sede CASCADE
;

DROP TABLE IF EXISTS TelefonoUsuario CASCADE
;

DROP TABLE IF EXISTS Usuario CASCADE
;

/* Create Tables */

CREATE TABLE Agenda
(
	k_idAgenda integer NOT NULL,	-- numero identificador de la agenda
	f_mes smallint NOT NULL,	-- Indicativo del mes en el que se registra la agenda
	k_numDocumento integer NOT NULL,	-- documento del paciente
	f_año smallint NOT NULL,	-- indicativo del año en el que se registra la agenda
	i_tipoDocumento varchar(2) NOT NULL,	-- tipo de documento del paciente
	i_estado varchar(2) NOT NULL	-- estado de la agenda
)
;

CREATE TABLE Categoria
(
	k_idCategoria integer NOT NULL,	-- Id de la categoría
	v_copago numeric(6) NOT NULL,	-- Valor de la cita
	n_nombre varchar(12) NOT NULL	-- Nombre del paciente
)
;

CREATE TABLE Cita
(
	k_numeroCita integer NOT NULL,
	i_estado varchar(1) NOT NULL,	-- Indicativo del estado de la cita
	v_copago numeric(5) NULL,	-- Valor numérico del precio a pagar por la cita
	i_horaInicio time(4) without time zone NOT NULL,	-- Hora de inicio de la cita
	f_fecha date NOT NULL,	-- Dia en el que se lleva a cabo la cita
	i_tipoCita varchar(16) NOT NULL,	-- El tipo de la cita 
	k_idAgenda integer NULL,
	k_numDocumento integer NULL,	-- Documento del medico
	i_tipoDocumento varchar(2) NULL	-- indica el tipo de documento del medico
)
;

CREATE TABLE Consultorio
(
	k_numero smallint NOT NULL,	-- Numero del consultorio en donde se realiza la cita
	k_codigo integer NOT NULL,	-- Codigo de la sede
	i_horario time without time zone NOT NULL	-- Indica el horario que tiene asignado el medico
)
;

CREATE TABLE EPS
(
	k_idEps integer NOT NULL,	-- identificador unico de la eps
	i_cancelacion smallint NOT NULL	-- indica el numero de horas con las que es posible la cancelacion de las citas
)
;

CREATE TABLE Especialidad
(
	k_idEspecialidad integer NOT NULL,	-- identificador unido de la especialidad
	n_especialidad varchar(16) NOT NULL	-- nombre de la especialidad
)
;

CREATE TABLE HistoriaClinica
(
	k_id integer NOT NULL,	-- ID único de cada historia clínica
	n_prescripcion varchar(25) NOT NULL,	-- Prescripción dada por el medico
	n_diagnostico varchar(25) NOT NULL,	-- Diagnostico dada por el medico
	k_numeroCita integer NOT NULL	-- Identificador de la cita
)
;

CREATE TABLE Medico
(
	n_registroMedico varchar(25) NOT NULL,	-- Registro medico 
	k_numDocumento integer NOT NULL,	-- Numero de documento del medico
	k_numConsultorio smallint NOT NULL,	-- Numero del consultorio del medico
	k_codigoSede integer NOT NULL,	-- Numero unico que identifica a la sede
	i_tipoDocumento varchar(2) NOT NULL	-- Cadena para identificar el tipo de documento del usuario
)
;

CREATE TABLE Medico - Especialidad
(
	k_numDocumento integer NULL,	-- documento del medico
	i_tipoDocumento varchar(2) NULL,	-- tipo de documento del medico
	k_idEspecialidad integer NULL	-- especialidad del medico
)
;

CREATE TABLE Paciente
(
	i_estado varchar(1) NOT NULL,	-- Estado de la cita 
	i_afiliacion varchar(12) NOT NULL,	-- Descripción del tipo de afiliación del paciente
	k_numDocumento integer NOT NULL,	-- Numero unico que identifica al usuario 
	i_tipoDocumento varchar(2) NOT NULL,	-- Cadena para identificar el tipo de documento del usuario
	k_idAfiliado integer NULL,	-- Identificador unico del afiliado de quien depende
	k_idCategoria integer NULL,	-- Categoría del paciente
	i_tipoDocumentoAfiliado varchar(2) NULL	-- indica el tipo de documento del afiliado
)
;

CREATE TABLE Sede
(
	k_codigo integer NOT NULL,	-- Numero único que identifica a la sede
	n_nombre varchar(25) NOT NULL,	-- Cadena que almacena el nombre de la sede
	n_direccion varchar(15) NOT NULL,	-- Cadena que almacena la direccion donde esta la sede
	q_telefono bigint NOT NULL	-- Número de teléfono de la sede 
)
;

CREATE TABLE TelefonoUsuario
(
	k_numDocumento integer NOT NULL,	-- Numero de documento del usuario
	q_telefono bigint NOT NULL,	-- Numero telefonico de un Usuario
	i_tipoDocumento varchar(2) NOT NULL	-- Cadena para identificar el tipo de documento del usuario
)
;

CREATE TABLE Usuario
(
	k_numDocumento integer NOT NULL,	-- Numero único que identifica al usuario
	i_sexo varchar(1) NOT NULL,	-- Identificador del sexo del usuario
	n_nombres varchar(25) NOT NULL,	-- Cadena de carácter que guarda los nombres del usuario
	n_apellidos varchar(25) NOT NULL,	-- Cadena de carácter que guarda los apellidos del usuario
	o_correoElectronico varchar(50) NOT NULL,	-- Cadena de caracteres que guarda el correo electronico del usuario
	i_tipoDocumento varchar(2) NOT NULL,	-- Cadena para identificar el tipo de documento del usuario
	f_fechaNacimiento date NOT NULL,	-- indica la fecha en la que nacio el usuario
	k_idEps integer NULL	-- indica la EPS en la que se encuentra el usuario
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE Agenda ADD CONSTRAINT PK_Agenda
	PRIMARY KEY (k_idAgenda)
;

ALTER TABLE Agenda ADD CONSTRAINT CK_id CHECK (k_id >0)
;

ALTER TABLE Agenda ADD CONSTRAINT CK_mes CHECK (i_mes >0 and i_mes =<12)
;

ALTER TABLE Agenda ADD CONSTRAINT CK_estado CHECK (i_estado in ('A','I'))
;

ALTER TABLE Agenda ADD CONSTRAINT CK_año CHECK (f_año > 0)
;

ALTER TABLE Categoria ADD CONSTRAINT PK_Categoria
	PRIMARY KEY (k_idCategoria)
;

ALTER TABLE Categoria ADD CONSTRAINT CK_precio CHECK (v_precio > 0)
;

ALTER TABLE Cita ADD CONSTRAINT PK_Cita
	PRIMARY KEY (k_numeroCita)
;

ALTER TABLE Cita ADD CONSTRAINT CK_numeroCita CHECK (k_numeroCita > 0)
;

ALTER TABLE Cita ADD CONSTRAINT CK_estado CHECK (i_estado in ('A','I'))
;

ALTER TABLE Cita ADD CONSTRAINT CK_copago CHECK (v_copago >= 0)
;

ALTER TABLE Consultorio ADD CONSTRAINT PK_Table1
	PRIMARY KEY (k_numero,k_codigo)
;

ALTER TABLE Consultorio ADD CONSTRAINT CK_numero CHECK (k_numero > 0 
k_numero<1000)
;

CREATE INDEX IXFK_Consultorio_Sede ON Consultorio (k_codigo ASC)
;

ALTER TABLE EPS ADD CONSTRAINT PK_Table1
	PRIMARY KEY (k_idEps)
;

ALTER TABLE EPS ADD CONSTRAINT CK_idEps CHECK (k_idEps > 0)
;

ALTER TABLE EPS ADD CONSTRAINT CK_cancelacion CHECK (hrs_cancelacion > 0)
;

ALTER TABLE Especialidad ADD CONSTRAINT PK_Especialidad
	PRIMARY KEY (k_idEspecialidad)
;

ALTER TABLE HistoriaClinica ADD CONSTRAINT PK_HistoriaClinica
	PRIMARY KEY (k_id,k_numeroCita)
;

ALTER TABLE HistoriaClinica ADD CONSTRAINT CK_id CHECK (k_id > 0)
;

ALTER TABLE HistoriaClinica ADD CONSTRAINT CK_numeroCita CHECK (k_numeroCita > 0)
;

ALTER TABLE Medico ADD CONSTRAINT PK_Medico
	PRIMARY KEY (k_numDocumento,i_tipoDocumento)
;

ALTER TABLE Paciente ADD CONSTRAINT PK_Paciente
	PRIMARY KEY (k_numDocumento,i_tipoDocumento)
;

ALTER TABLE Paciente ADD CONSTRAINT CK_estado CHECK (i_estado in ('A','I'))
;

ALTER TABLE Paciente ADD CONSTRAINT CK_tipoDocumentoAfiliado CHECK (i_tipoDocumentoAfiliado in ('CC','CE'))
;

ALTER TABLE Sede ADD CONSTRAINT PK_Sede
	PRIMARY KEY (k_codigo)
;

ALTER TABLE Sede ADD CONSTRAINT CK_telefono CHECK (q_telefono >0)
;

ALTER TABLE Sede ADD CONSTRAINT CK_codigo CHECK (k_codigo > 0)
;

ALTER TABLE TelefonoUsuario ADD CONSTRAINT CK_telefono CHECK (q_telefono > 0 )
;

ALTER TABLE Usuario ADD CONSTRAINT PK_Usuario
	PRIMARY KEY (k_numDocumento,i_tipoDocumento)
;

ALTER TABLE Usuario ADD CONSTRAINT CK_numDocumento CHECK (k_numDocumento > 0)
;

ALTER TABLE Usuario ADD CONSTRAINT CK_sexo CHECK (i_sexo in ('M','F'))
;

ALTER TABLE Usuario ADD CONSTRAINT CK_tipoDocumento CHECK (i_tipoDocumento in ('CC','CE','TI'))
;

/* Create Foreign Key Constraints */

ALTER TABLE Agenda ADD CONSTRAINT FK_Agenda_Medico
	FOREIGN KEY (k_numDocumento,i_tipoDocumento) REFERENCES Medico (k_numDocumento,i_tipoDocumento) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Cita ADD CONSTRAINT FK_Cita_Agenda
	FOREIGN KEY (k_idAgenda) REFERENCES Agenda (k_idAgenda) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Consultorio ADD CONSTRAINT FK_Consultorio_Sede_02
	FOREIGN KEY (k_codigo) REFERENCES Sede (k_codigo) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Medico ADD CONSTRAINT FK_Medico_Consultorio
	FOREIGN KEY (k_numConsultorio,k_codigoSede) REFERENCES Consultorio (k_numero,k_codigo) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Medico - Especialidad ADD CONSTRAINT FK_Medico - Especialidad_Especialidad
	FOREIGN KEY (k_idEspecialidad) REFERENCES Especialidad (k_idEspecialidad) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Medico - Especialidad ADD CONSTRAINT FK_Medico - Especialidad_Medico
	FOREIGN KEY (k_numDocumento,i_tipoDocumento) REFERENCES Medico (k_numDocumento,i_tipoDocumento) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Paciente ADD CONSTRAINT FK_Paciente_Categoria
	FOREIGN KEY (k_idCategoria) REFERENCES Categoria (k_idCategoria) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Paciente ADD CONSTRAINT FK_Paciente_Paciente
	FOREIGN KEY (k_idAfiliado,i_tipoDocumentoAfiliado) REFERENCES Paciente (k_numDocumento,i_tipoDocumento) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Usuario ADD CONSTRAINT FK_Usuario_EPS
	FOREIGN KEY (k_idEps) REFERENCES EPS (k_idEps) ON DELETE No Action ON UPDATE No Action
;

/* Create Table Comments, Sequences for Autonumber Columns */

COMMENT ON TABLE Agenda
	IS 'agenda que tiene asignada el paciente '
;

COMMENT ON COLUMN Agenda.k_idAgenda
	IS 'numero identificador de la agenda'
;

COMMENT ON COLUMN Agenda.f_mes
	IS 'Indicativo del mes en el que se registra la agenda'
;

COMMENT ON COLUMN Agenda.k_numDocumento
	IS 'documento del paciente'
;

COMMENT ON COLUMN Agenda.f_año
	IS 'indicativo del año en el que se registra la agenda'
;

COMMENT ON COLUMN Agenda.i_tipoDocumento
	IS 'tipo de documento del paciente'
;

COMMENT ON COLUMN Agenda.i_estado
	IS 'estado de la agenda'
;

COMMENT ON TABLE Categoria
	IS 'Indica la categoría de cada paciente'
;

COMMENT ON COLUMN Categoria.k_idCategoria
	IS 'Id de la categoría'
;

COMMENT ON COLUMN Categoria.v_copago
	IS 'Valor de la cita'
;

COMMENT ON COLUMN Categoria.n_nombre
	IS 'Nombre del paciente'
;

COMMENT ON TABLE Cita
	IS 'Tabla para guardar la información de las citas solicitados'
;

COMMENT ON COLUMN Cita.i_estado
	IS 'Indicativo del estado de la cita'
;

COMMENT ON COLUMN Cita.v_copago
	IS 'Valor numérico del precio a pagar por la cita'
;

COMMENT ON COLUMN Cita.i_horaInicio
	IS 'Hora de inicio de la cita'
;

COMMENT ON COLUMN Cita.f_fecha
	IS 'Dia en el que se lleva a cabo la cita'
;

COMMENT ON COLUMN Cita.i_tipoCita
	IS 'El tipo de la cita '
;

COMMENT ON COLUMN Cita.k_numDocumento
	IS 'Documento del medico'
;

COMMENT ON COLUMN Cita.i_tipoDocumento
	IS 'indica el tipo de documento del medico'
;

COMMENT ON TABLE Consultorio
	IS 'Guarda la informacion del consultorio que se asignara el medico'
;

COMMENT ON COLUMN Consultorio.k_numero
	IS 'Numero del consultorio en donde se realiza la cita'
;

COMMENT ON COLUMN Consultorio.k_codigo
	IS 'Codigo de la sede'
;

COMMENT ON COLUMN Consultorio.i_horario
	IS 'Indica el horario que tiene asignado el medico'
;

COMMENT ON TABLE EPS
	IS 'Guarda los datos de la EPS '
;

COMMENT ON COLUMN EPS.k_idEps
	IS 'identificador unico de la eps'
;

COMMENT ON COLUMN EPS.i_cancelacion
	IS 'indica el numero de horas con las que es posible la cancelacion de las citas'
;

COMMENT ON TABLE Especialidad
	IS 'guarda las especialidades'
;

COMMENT ON COLUMN Especialidad.k_idEspecialidad
	IS 'identificador unido de la especialidad'
;

COMMENT ON COLUMN Especialidad.n_especialidad
	IS 'nombre de la especialidad'
;

COMMENT ON TABLE HistoriaClinica
	IS 'Se guarda la historia clinica tras realizar la cita'
;

COMMENT ON COLUMN HistoriaClinica.k_id
	IS 'ID único de cada historia clínica'
;

COMMENT ON COLUMN HistoriaClinica.n_prescripcion
	IS 'Prescripción dada por el medico'
;

COMMENT ON COLUMN HistoriaClinica.n_diagnostico
	IS 'Diagnostico dada por el medico'
;

COMMENT ON COLUMN HistoriaClinica.k_numeroCita
	IS 'Identificador de la cita'
;

COMMENT ON TABLE Medico
	IS 'Guarda la información de los médicos '
;

COMMENT ON COLUMN Medico.n_registroMedico
	IS 'Registro medico '
;

COMMENT ON COLUMN Medico.k_numDocumento
	IS 'Numero de documento del medico'
;

COMMENT ON COLUMN Medico.k_numConsultorio
	IS 'Numero del consultorio del medico'
;

COMMENT ON COLUMN Medico.k_codigoSede
	IS 'Numero unico que identifica a la sede'
;

COMMENT ON COLUMN Medico.i_tipoDocumento
	IS 'Cadena para identificar el tipo de documento del usuario'
;

COMMENT ON TABLE Medico - Especialidad
	IS 'asocia al medico con sus especialidades'
;

COMMENT ON COLUMN Medico - Especialidad.k_numDocumento
	IS 'documento del medico'
;

COMMENT ON COLUMN Medico - Especialidad.i_tipoDocumento
	IS 'tipo de documento del medico'
;

COMMENT ON COLUMN Medico - Especialidad.k_idEspecialidad
	IS 'especialidad del medico'
;

COMMENT ON TABLE Paciente
	IS 'Guarda la información de los pacientes asociados a la EPS'
;

COMMENT ON COLUMN Paciente.i_estado
	IS 'Estado de la cita '
;

COMMENT ON COLUMN Paciente.i_afiliacion
	IS 'Descripción del tipo de afiliación del paciente'
;

COMMENT ON COLUMN Paciente.k_numDocumento
	IS 'Numero unico que identifica al usuario '
;

COMMENT ON COLUMN Paciente.i_tipoDocumento
	IS 'Cadena para identificar el tipo de documento del usuario'
;

COMMENT ON COLUMN Paciente.k_idAfiliado
	IS 'Identificador unico del afiliado de quien depende'
;

COMMENT ON COLUMN Paciente.k_idCategoria
	IS 'Categoría del paciente'
;

COMMENT ON COLUMN Paciente.i_tipoDocumentoAfiliado
	IS 'indica el tipo de documento del afiliado'
;

COMMENT ON TABLE Sede
	IS 'Guarda la información de las sedes que están asociadas a la EPS'
;

COMMENT ON COLUMN Sede.k_codigo
	IS 'Numero único que identifica a la sede'
;

COMMENT ON COLUMN Sede.n_nombre
	IS 'Cadena que almacena el nombre de la sede'
;

COMMENT ON COLUMN Sede.n_direccion
	IS 'Cadena que almacena la direccion donde esta la sede'
;

COMMENT ON COLUMN Sede.q_telefono
	IS 'Número de teléfono de la sede '
;

COMMENT ON TABLE TelefonoUsuario
	IS 'Almacena el teléfono de un usuario'
;

COMMENT ON COLUMN TelefonoUsuario.k_numDocumento
	IS 'Numero de documento del usuario'
;

COMMENT ON COLUMN TelefonoUsuario.q_telefono
	IS 'Numero telefonico de un Usuario'
;

COMMENT ON COLUMN TelefonoUsuario.i_tipoDocumento
	IS 'Cadena para identificar el tipo de documento del usuario'
;

COMMENT ON TABLE Usuario
	IS 'Almacena la informacion de los usuarios asociados a la EPS'
;

COMMENT ON COLUMN Usuario.k_numDocumento
	IS 'Numero único que identifica al usuario'
;

COMMENT ON COLUMN Usuario.i_sexo
	IS 'Identificador del sexo del usuario'
;

COMMENT ON COLUMN Usuario.n_nombres
	IS 'Cadena de carácter que guarda los nombres del usuario'
;

COMMENT ON COLUMN Usuario.n_apellidos
	IS 'Cadena de carácter que guarda los apellidos del usuario'
;

COMMENT ON COLUMN Usuario.o_correoElectronico
	IS 'Cadena de caracteres que guarda el correo electronico del usuario'
;

COMMENT ON COLUMN Usuario.i_tipoDocumento
	IS 'Cadena para identificar el tipo de documento del usuario'
;

COMMENT ON COLUMN Usuario.f_fechaNacimiento
	IS 'indica la fecha en la que nacio el usuario'
;

COMMENT ON COLUMN Usuario.k_idEps
	IS 'indica la EPS en la que se encuentra el usuario'
;
